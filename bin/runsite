#! /bin/bash


#
# runsite - run your Node.js site
#
# This should be used only for development. A production server should run the
# `node` or `coffee` command directly with all of the parameters. In
# particular, a production server will need to set different `PORT` settings
# for each running Node site.
#


site_dir=$(cd `dirname $0`/../; pwd)
start_dir="$(pwd)"
. ${site_dir}/bin/set-env


# Set some defaults before we bring in the runtime config

NODE_PATH="${site_dir}/app/lib:${site_dir}/app/site_modules:${NODE_PATH}"

if [ -z "${PORT}" ]
then
    PORT=3000
fi

server_script='/app'

if [ -z "${NODE_ENV}" ]
then
    NODE_ENV='production'
fi

# Source the runtime config, if any.

if [ -f ${site_dir}/config/runtime ]
then
    source ${site_dir}/config/runtime
fi

if [[ $coffeescript = 0 ]]
then
    run_command=coffee
else
    run_command=node
fi


# cd to the app directory so connect-assets can locate things properly.
cd `dirname "${site_dir}${server_script}"`

# We have to assign the the NODE_PATH variable here, in this command or it will
# have no effect. The others are assigned here just in case.
NODE_PATH="${NODE_PATH}" PORT=${PORT} NODE_ENV=${NODE_ENV} $run_command ${site_dir}${server_script}
